{"ast":null,"code":"import e, { useRef as r, useImperativeHandle as t } from \"react\";\nimport { useTableColumnHeader as o, useTableSelectAllCheckbox as a } from \"@react-aria/table\";\nimport { useToggleState as i } from \"@react-stately/toggle\";\nimport { VisuallyHidden as l } from \"@react-aria/visually-hidden\";\nimport { useFocusRing as c } from \"@react-aria/focus\";\nimport { mergeProps as s } from \"@react-aria/utils\";\nimport { useCheckbox as m } from \"@react-aria/checkbox\";\nimport n from \"../checkbox\";\nimport { StyledTableHeaderCell as d } from \"./table.styles\";\nimport p from \"../utils/clsx\";\nimport { jsx as u } from \"react/jsx-runtime\";\nconst f = e.forwardRef((_ref, k) => {\n  let {\n    column: e,\n    state: f,\n    color: b,\n    animated: x,\n    ...h\n  } = _ref;\n  const g = r(null);\n  t(k, () => null == g ? void 0 : g.current);\n  const y = \"single\" === f.selectionManager.selectionMode,\n        {\n    columnHeaderProps: N\n  } = o({\n    node: e\n  }, f, g),\n        {\n    checkboxProps: P\n  } = a(f),\n        {\n    isFocusVisible: S,\n    focusProps: $\n  } = c(),\n        I = r(null),\n        {\n    inputProps: j\n  } = m(P, i({ ...P,\n    isSelected: P.isSelected || P.isIndeterminate\n  }), I);\n  return u(d, {\n    ref: g,\n    isFocusVisible: S,\n    className: p(\"nextui-table-select-all-checkbox\", h.className),\n    ...s(N, $, h),\n    children: y ? u(l, {\n      children: j[\"aria-label\"]\n    }) : u(n, {\n      ref: I,\n      ...j,\n      indeterminate: P.isIndeterminate,\n      color: b,\n      animated: x,\n      css: {\n        display: \"inherit\",\n        $$checkboxBorderColor: \"$colors$accents3\"\n      }\n    })\n  });\n});\nf.displayName = \"NextUI - TableSelectAllCheckbox\", f.toString = () => \".nextui-table-select-all-checkbox\";\nexport default f;","map":{"version":3,"sources":["C:/Users/Charles Amoah Ansong/Desktop/Projects/mobile-subscribe/node_modules/@nextui-org/react/esm/table/table-select-all-checkbox.js"],"names":["e","useRef","r","useImperativeHandle","t","useTableColumnHeader","o","useTableSelectAllCheckbox","a","useToggleState","i","VisuallyHidden","l","useFocusRing","c","mergeProps","s","useCheckbox","m","n","StyledTableHeaderCell","d","p","jsx","u","f","forwardRef","k","column","state","color","b","animated","x","h","g","current","y","selectionManager","selectionMode","columnHeaderProps","N","node","checkboxProps","P","isFocusVisible","S","focusProps","$","I","inputProps","j","isSelected","isIndeterminate","ref","className","children","indeterminate","css","display","$$checkboxBorderColor","displayName","toString"],"mappings":"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","sourcesContent":["import e,{useRef as r,useImperativeHandle as t}from\"react\";import{useTableColumnHeader as o,useTableSelectAllCheckbox as a}from\"@react-aria/table\";import{useToggleState as i}from\"@react-stately/toggle\";import{VisuallyHidden as l}from\"@react-aria/visually-hidden\";import{useFocusRing as c}from\"@react-aria/focus\";import{mergeProps as s}from\"@react-aria/utils\";import{useCheckbox as m}from\"@react-aria/checkbox\";import n from\"../checkbox\";import{StyledTableHeaderCell as d}from\"./table.styles\";import p from\"../utils/clsx\";import{jsx as u}from\"react/jsx-runtime\";const f=e.forwardRef((({column:e,state:f,color:b,animated:x,...h},k)=>{const g=r(null);t(k,(()=>null==g?void 0:g.current));const y=\"single\"===f.selectionManager.selectionMode,{columnHeaderProps:N}=o({node:e},f,g),{checkboxProps:P}=a(f),{isFocusVisible:S,focusProps:$}=c(),I=r(null),{inputProps:j}=m(P,i({...P,isSelected:P.isSelected||P.isIndeterminate}),I);return u(d,{ref:g,isFocusVisible:S,className:p(\"nextui-table-select-all-checkbox\",h.className),...s(N,$,h),children:y?u(l,{children:j[\"aria-label\"]}):u(n,{ref:I,...j,indeterminate:P.isIndeterminate,color:b,animated:x,css:{display:\"inherit\",$$checkboxBorderColor:\"$colors$accents3\"}})})}));f.displayName=\"NextUI - TableSelectAllCheckbox\",f.toString=()=>\".nextui-table-select-all-checkbox\";export default f;"]},"metadata":{},"sourceType":"module"}